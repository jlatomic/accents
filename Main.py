import streamlit as st
import random

# Configuraci√≥n inicial de la p√°gina
st.set_page_config(page_title="¬°Acentos Game! - 1¬∫ ESO", layout="centered")

# Estilos CSS personalizados (similar al HTML original)
st.markdown("""
<style>
    .main {
        background: linear-gradient(135deg, #6e8efb, #a777e3);
        padding: 10px; /* Reducido de 20px */
    }
    .game-container, .rules-container {
        background: white;
        border-radius: 12px; /* Un poco menos */
        padding: 16px; /* Reducido de 20px */
        box-shadow: 0 8px 20px rgba(0,0,0,0.15);
        text-align: center;
        max-width: 600px;
        margin: auto;
    }
    .word-display {
        font-size: 2rem; /* Reducido ligeramente */
        margin: 20px 0; /* Reducido de 30px */
        font-weight: bold;
        color: #e7eb08;
        # color: #2d3748;
        min-height: 2.5rem;
    }
    .feedback {
        margin: 12px 0; /* Reducido */
        padding: 10px; /* Reducido */
        border-radius: 6px;
        font-weight: bold;
        min-height: auto;
        text-align: center;
        font-size: 0.95rem;
    }
    h1 {
        color: #4a5568;
        margin-bottom: 8px; /* Reducido */
        font-size: 1.6rem;
    }

    /* En m√≥viles: usar una sola columna para botones */
    @media (max-width: 600px) {
        .word-display {
            font-size: 1.8rem;
        }
        .stButton > button {
            width: 100% !important;
            margin-bottom: 8px;
        }
        /* Forzar una columna en m√≥vil */
        [data-testid="column"] {
            width: 100% !important;
            display: block !important;
            margin: 0 !important;
        }
    }
</style>
""", unsafe_allow_html=True)

# Banco de palabras por niveles
WORD_BANK = {
    1: [
        {"display": "arbol", "correct": "√°", "answer": "√°rbol"},
        {"display": "cafe", "correct": "√©", "answer": "caf√©"},
        {"display": "musica", "correct": "√∫", "answer": "m√∫sica"},
        {"display": "avion", "correct": "√≥", "answer": "avi√≥n"},
        {"display": "dia", "correct": "√≠", "answer": "d√≠a"},
        {"display": "lapiz", "correct": "√°", "answer": "l√°piz"},
        {"display": "tunel", "correct": "√∫", "answer": "t√∫nel"},
        {"display": "telefono", "correct": "√≥", "answer": "tel√©fono"},
        {"display": "carcel", "correct": "√°", "answer": "c√°rcel"},
        {"display": "azucar", "correct": "√∫", "answer": "az√∫car"},
        {"display": "facil", "correct": "√°", "answer": "f√°cil"},
        {"display": "bebe", "correct": "√©", "answer": "beb√©"},
        {"display": "jamas", "correct": "√°", "answer": "jam√°s"},
        {"display": "ingles", "correct": "√©", "answer": "ingl√©s"},
        {"display": "camion", "correct": "√≥", "answer": "cami√≥n"},
        {"display": "raton", "correct": "√≥", "answer": "rat√≥n"},
        {"display": "jabali", "correct": "√≠", "answer": "jabal√≠"},
        {"display": "buho", "correct": "√∫", "answer": "b√∫ho"},
        {"display": "pais", "correct": "√≠", "answer": "pa√≠s"},
        {"display": "sofa", "correct": "√°", "answer": "sof√°"},
    ],
    2: [
        {"display": "medico", "correct": "√©", "answer": "m√©dico"},
        {"display": "titulo", "correct": "√≠", "answer": "t√≠tulo"},
        {"display": "cesped", "correct": "√©", "answer": "c√©sped"},
        {"display": "angel", "correct": "√°", "answer": "√°ngel"},
        {"display": "maquina", "correct": "√°", "answer": "m√°quina"},
        {"display": "termino", "correct": "√©", "answer": "t√©rmino"},
        {"display": "pajaro", "correct": "√°", "answer": "p√°jaro"},
        {"display": "record", "correct": "√©", "answer": "r√©cord"},
        {"display": "habil", "correct": "√°", "answer": "h√°bil"},
        {"display": "centimo", "correct": "√©", "answer": "c√©ntimo"},
        {"display": "polvora", "correct": "√≥", "answer": "p√≥lvora"},
        {"display": "arbitro", "correct": "√°", "answer": "√°rbitro"},
        {"display": "callate", "correct": "√°", "answer": "c√°llate"},
        {"display": "martir", "correct": "√°", "answer": "m√°rtir"},
        {"display": "timido", "correct": "√≠", "answer": "t√≠mido"},
        {"display": "fosil", "correct": "√≥", "answer": "f√≥sil"},
        {"display": "celebre", "correct": "√©", "answer": "c√©lebre"},
        {"display": "higado", "correct": "√≠", "answer": "h√≠gado"},
    ],
    3: [
        {"display": "examenes", "correct": "√°", "answer": "ex√°menes"},
        {"display": "jovenes", "correct": "√≥", "answer": "j√≥venes"},
        {"display": "regimen", "correct": "√©", "answer": "r√©gimen"},
        {"display": "caracter", "correct": "√°", "answer": "car√°cter"},
        {"display": "compramelo", "correct": "√≥", "answer": "c√≥mpramelo"},
        {"display": "damelas", "correct": "√°", "answer": "d√°melas"},
        {"display": "rapidamente", "correct": "√°", "answer": "r√°pidamente"},
        {"display": "logicamente", "correct": "√≥", "answer": "l√≥gicamente"},
        {"display": "fisicamente", "correct": "√≠", "answer": "f√≠sicamente"},
        {"display": "matematicas", "correct": "√°", "answer": "matem√°ticas"},
        {"display": "politicas", "correct": "√≠", "answer": "pol√≠ticas"},
        {"display": "economicas", "correct": "√≥", "answer": "econ√≥micas"},
        {"display": "historicas", "correct": "√≥", "answer": "hist√≥ricas"},
        {"display": "geograficas", "correct": "√°", "answer": "geogr√°ficas"},
        {"display": "cientificas", "correct": "√≠", "answer": "cient√≠ficas"},
        {"display": "academicas", "correct": "√©", "answer": "acad√©micas"},
        {"display": "democraticas", "correct": "√°", "answer": "democr√°ticas"},
        {"display": "republica", "correct": "√∫", "answer": "rep√∫blica"},
        {"display": "publico", "correct": "√∫", "answer": "p√∫blico"},
        {"display": "tecnicamente", "correct": "√©", "answer": "t√©cnicamente"},
    ],
    4: [
        {"display": "murcielago", "correct": "√©", "answer": "murci√©lago"},
        {"display": "aereo", "correct": "√©", "answer": "a√©reo"},
        {"display": "heroe", "correct": "√©", "answer": "h√©roe"},
        {"display": "rio", "correct": "√≠", "answer": "r√≠o"},
        {"display": "baul", "correct": "√∫", "answer": "ba√∫l"},
        {"display": "raiz", "correct": "√≠", "answer": "ra√≠z"},
        {"display": "maiz", "correct": "√≠", "answer": "ma√≠z"},
        {"display": "ataud", "correct": "√∫", "answer": "ata√∫d"},
        {"display": "reir", "correct": "√≠", "answer": "re√≠r"},
        {"display": "oir", "correct": "√≠", "answer": "o√≠r"},
        {"display": "freir", "correct": "√≠", "answer": "fre√≠r"},
        {"display": "sonreir", "correct": "√≠", "answer": "sonre√≠r"},
        {"display": "caidas", "correct": "√≠", "answer": "ca√≠das"},
        {"display": "leismo", "correct": "√≠", "answer": "le√≠smo"},
        {"display": "tia", "correct": "√≠", "answer": "t√≠a"},
        {"display": "pua", "correct": "√∫", "answer": "p√∫a"},
        {"display": "buho", "correct": "√∫", "answer": "b√∫ho"},
        {"display": "pais", "correct": "√≠", "answer": "pa√≠s"},
    ],
    5: [
        {"display": "cuidate", "correct": "√≠", "answer": "cu√≠date"},
        {"display": "apreciais", "correct": "√°", "answer": "apreci√°is"},
        {"display": "evaluais", "correct": "√°", "answer": "evalu√°is"},
        {"display": "actueis", "correct": "√∫", "answer": "actu√©is"},
        {"display": "continue", "correct": "√∫", "answer": "contin√∫e"},
        {"display": "evalue", "correct": "√∫", "answer": "eval√∫e"},
        {"display": "guion", "correct": "sin acento", "answer": "gui√≥n"},
        {"display": "fie", "correct": "sin acento", "answer": "fi√©"},
        {"display": "liais", "correct": "sin acento", "answer": "li√°is"},
        {"display": "truhan", "correct": "sin acento", "answer": "truh√°n"},
        {"display": "fuer", "correct": "sin acento", "answer": "fu√©"},
        {"display": "carmen", "correct": "sin acento", "answer": "Carmen"},
        {"display": "angel", "correct": "sin acento", "answer": "√Ångel"},
        {"display": "album", "correct": "sin acento", "answer": "√°lbum"},
        {"display": "movil", "correct": "sin acento", "answer": "m√≥vil"},
    ]
}

# Mapeo para mostrar botones
OPTION_LABELS = {
    "√°": "Acento en √°",
    "√©": "Acento en √©",
    "√≠": "Acento en √≠",
    "√≥": "Acento en √≥",
    "√∫": "Acento en √∫",
    "sin acento": "Sin acento"
}

# Inicializar estado de sesi√≥n
if "current_level" not in st.session_state:
    st.session_state.current_level = 1
    st.session_state.score = 0
    st.session_state.stars = 0
    st.session_state.used_words = []
    st.session_state.current_word = None
    st.session_state.answered = False
    st.session_state.feedback = ""
    st.session_state.feedback_class = ""
    st.session_state.show_rules = False

# Funci√≥n para cargar nueva palabra
def load_new_word():
    available = [w for w in WORD_BANK[st.session_state.current_level] if w["display"] not in st.session_state.used_words]
    if not available:
        st.session_state.used_words = []
        available = WORD_BANK[st.session_state.current_level]
    word = random.choice(available)
    st.session_state.current_word = word
    st.session_state.used_words.append(word["display"])
    st.session_state.answered = False
    st.session_state.feedback = ""
    st.session_state.feedback_class = ""

# Funci√≥n para subir de nivel
def level_up():
    if st.session_state.current_level < 5:
        st.session_state.current_level += 1
        st.session_state.stars = 0
        st.session_state.used_words = []
        st.session_state.feedback = f"¬°Felicidades! Has subido al nivel {st.session_state.current_level} üöÄ"
        st.session_state.feedback_class = "correct"
    else:
        st.session_state.feedback = "¬°Has completado todos los niveles! ¬°Eres un maestro de los acentos! üèÜ"
        st.session_state.feedback_class = "correct"

# Cargar primera palabra si no hay
if st.session_state.current_word is None:
    load_new_word()

# Funci√≥n para mostrar reglas
def show_rules():
    st.session_state.show_rules = True

def hide_rules():
    st.session_state.show_rules = False

# === INTERFAZ ===

if st.session_state.show_rules:
    # Pantalla de reglas
    st.markdown('<div class="rules-container">', unsafe_allow_html=True)
    st.markdown("<h1>Reglas de Acentuaci√≥n</h1>", unsafe_allow_html=True)
    
    st.markdown("""
    <div class="rules-content">
        <h2>1. Palabras Agudas</h2>
        <p>Llevan el acento en la √∫ltima s√≠laba. Se acent√∫an cuando terminan en vocal, -n o -s.</p>
        <ul>
            <li>caf√©, jam√°s, tambi√©n, comp√°s</li>
            <li>jabal√≠, marroqu√≠, hind√∫</li>
        </ul>
        
        <h2>2. Palabras Llanas o Graves</h2>
        <p>Llevan el acento en la pen√∫ltima s√≠laba. Se acent√∫an cuando NO terminan en vocal, -n o -s.</p>
        <ul>
            <li>l√°piz, √°rbol, f√°cil, c√°rcel</li>
            <li>m√°rmol, √°ngel, P√©rez</li>
        </ul>
        
        <h2>3. Palabras Esdr√∫julas</h2>
        <p>Llevan el acento en la antepen√∫ltima s√≠laba. Siempre llevan tilde.</p>
        <ul>
            <li>m√∫sica, tel√©fono, Am√©rica</li>
            <li>c√°mara, m√©dico, pel√≠cula</li>
        </ul>
        
        <h2>4. Palabras Sobreesdr√∫julas</h2>
        <p>Llevan el acento antes de la antepen√∫ltima s√≠laba. Siempre llevan tilde.</p>
        <ul>
            <li>d√≠gamelo, c√≥mpraselo, ll√©vamelo</li>
            <li>cu√©ntaselo, d√©jamelo</li>
        </ul>
        
        <h2>5. Diptongos, Triptongos y Hiatos</h2>
        <ul>
            <li><strong>Diptongos:</strong> Combinaci√≥n de dos vocales en una misma s√≠laba (ai, au, ei, eu, oi, ou, ia, ie, io, iu, ua, ue, uo). Se acent√∫a seg√∫n las reglas generales.</li>
            <li><strong>Triptongos:</strong> Combinaci√≥n de tres vocales en una misma s√≠laba (iai, iau, uai, uei...). Se acent√∫a seg√∫n las reglas generales.</li>
            <li><strong>Hiatos:</strong> Dos vocales juntas pero en s√≠labas diferentes. Siempre se acent√∫a la vocal cerrada (i, u) cuando va con vocal abierta (a, e, o).</li>
            <ul>
                <li>pa-√≠s, ba-√∫l, ra-√≠z, son-re-√≠r</li>
            </ul>
        </ul>
        
        <h2>6. Acento Diacr√≠tico</h2>
        <p>Se usa para diferenciar palabras que se escriben igual pero tienen distinto significado.</p>
        <ul>
            <li>t√∫ (pronombre) vs tu (posesivo)</li>
            <li>√©l (pronombre) vs el (art√≠culo)</li>
            <li>s√≠ (afirmaci√≥n) vs si (condicional)</li>
            <li>m√≠ (pronombre) vs mi (posesivo)</li>
            <li>t√© (bebida) vs te (pronombre)</li>
        </ul>
    </div>
    """, unsafe_allow_html=True)
    
    if st.button("Volver al juego", key="back_btn", use_container_width=True):
        hide_rules()
    st.markdown('</div>', unsafe_allow_html=True)

else:
    # Pantalla del juego
    st.markdown('<div class="game-container">', unsafe_allow_html=True)
    st.markdown("<h1>¬°Acentos Game!</h1>", unsafe_allow_html=True)
    
    # Informaci√≥n del nivel y puntuaci√≥n
    col1, col2 = st.columns(2)
    with col1:
        st.metric(label=f"Nivel {st.session_state.current_level}", value=f"{st.session_state.stars} / 5 ‚òÖ")
    with col2:
        st.metric(label="Puntuaci√≥n", value=st.session_state.score)

    # Barra de progreso
    progress = st.session_state.stars / 5
    st.progress(progress)
    
    # Palabra a acentuar
    st.markdown(f'<div class="word-display">{st.session_state.current_word["display"]}</div>', unsafe_allow_html=True)
    
    # Opciones
    cols = st.columns(3)
    options = ["√°", "√©", "√≠", "√≥", "√∫", "sin acento"]
    for i, opt in enumerate(options):
        col = cols[i % 3]
        if col.button(OPTION_LABELS[opt], key=f"opt_{i}", disabled=st.session_state.answered, use_container_width=True):
            # Verificar respuesta
            if opt == st.session_state.current_word["correct"]:
                st.session_state.feedback = f'¬°Correcto! La palabra es "{st.session_state.current_word["answer"]}" üéâ'
                st.session_state.feedback_class = "correct"
                st.session_state.score += 10 * st.session_state.current_level
                st.session_state.stars += 1
                if st.session_state.stars >= 5:
                    level_up()
            else:
                st.session_state.feedback = f'Incorrecto. La respuesta correcta era: {OPTION_LABELS[st.session_state.current_word["correct"]]}. La palabra es "{st.session_state.current_word["answer"]}"'
                st.session_state.feedback_class = "incorrect"
                if st.session_state.stars > 0:
                    st.session_state.stars -= 1
            st.session_state.answered = True
            st.rerun()
    
    # Feedback
    if st.session_state.feedback:
        cls = st.session_state.feedback_class
        st.markdown(f'<div class="feedback {cls}">{st.session_state.feedback}</div>', unsafe_allow_html=True)
    
    # Botones de acci√≥n
    if st.session_state.answered:
        col1, col2 = st.columns(2)
        if col1.button("Siguiente palabra", key="next_btn", use_container_width=True):
            load_new_word()
            st.rerun()
        if col2.button("Reglas de acentuaci√≥n", key="rules_btn", use_container_width=True):
            show_rules()
            st.rerun() # To show the rules immediately
    else:
        # Ocupa todo el ancho si no hay bot√≥n de "Siguiente"
        if st.button("Reglas de acentuaci√≥n", key="rules_btn", use_container_width=True):
            show_rules()
            st.rerun() # To show the rules immediately
    
    st.markdown('</div>', unsafe_allow_html=True)